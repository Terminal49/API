parameters:
  -
    schema:
      type: "string"
    name: "id"
    in: "path"
    required: true
get:
  summary: "Get single webhook"
  tags:
    - "Webhooks"
  responses:
    200:
      description: "OK"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/components/schemas/webhook"
  operationId: "get-webhooks-id"
  description: "Get the details of a single webhook"
patch:
  summary: "Edit a webhook"
  operationId: "patch-webhooks-id"
  responses:
    200:
      description: "OK"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/components/schemas/webhook"
  description: "Update a single webhook"
  tags:
    - "Webhooks"
  requestBody:
    content:
      application/json:
        schema:
          type: "object"
          properties:
            data:
              type: "object"
              required:
                - "attributes"
                - "type"
              properties:
                attributes:
                  type: "object"
                  properties:
                    url:
                      type: "string"
                      example: "https://webhook.site/#!/39084fbb-d887-42e8-be08-b9183ad02362"
                      format: "uri"
                      description: "The URL of the webhook endpoint."
                    events:
                      type: "array"
                      description: "The list of events to enable for this endpoint."
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: "string"
                        enum:
                          - "container.transport.vessel_arrived"
                          - "container.transport.vessel_discharged"
                          - "container.transport.vessel_loaded"
                          - "container.transport.vessel_departed"
                          - "container.transport.rail_departed"
                          - "container.transport.rail_arrived"
                          - "container.transport.rail_loaded"
                          - "container.transport.rail_unloaded"
                          - "container.transport.transshipment_arrived"
                          - "container.transport.transshipment_discharged"
                          - "container.transport.transshipment_loaded"
                          - "container.transport.transshipment_departed"
                          - "container.transport.feeder_arrived"
                          - "container.transport.feeder_discharged"
                          - "container.transport.feeder_loaded"
                          - "container.transport.feeder_departed"
                          - "container.transport.empty_out"
                          - "container.transport.full_in"
                          - "container.transport.full_out"
                          - "container.transport.empty_in"
                          - "container.transport.vessel_berthed"
                          - "shipment.estimated.arrival"
                          - "tracking_request.succeeded"
                          - "tracking_request.failed"
                          - "tracking_request.awaiting_manifest"
                          - "tracking_request.tracking_stopped"
                          - "container.created"
                          - "container.updated"
                          - "container.pod_terminal_changed"
                          - "container.transport.arrived_at_inland_destination"
                          - "container.transport.estimated.arrived_at_inland_destination"
                          - "container.pickup_lfd.changed"
                          - "container.transport.available"
                    active:
                      type: "boolean"
                    headers:
                      type: "array"
                      description: "Optional custom headers to pass with each webhook invocation"
                      items:
                        type: "object"
                        properties:
                          name:
                            type: "string"
                            description: "The name of the header. (Please not this will be auto-capitalized) "
                          value:
                            type: "string"
                            description: "The value to pass for the header\n"
                type:
                  type: "string"
                  enum:
                    - "webhook"
          required:
            - "data"
        examples: {}
delete:
  summary: "Delete a webhook"
  operationId: "delete-webhooks-id"
  responses:
    200:
      description: "OK"
  description: "Delete a webhook"
  tags:
    - "Webhooks"

name: Generate Postman Collection

on:
  push:
    # No branch filter here - runs on all branches
    paths:
      - 'docs/openapi.json' # Only trigger on changes to the source spec

jobs:
  generate-collection:
    runs-on: ubuntu-latest
    permissions:
      # Required to checkout the code and commit back
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history needed for diff and commit
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a current LTS version

      - name: Install openapi-to-postmanv2
        run: npm install -g openapi-to-postmanv2

      - name: Generate Postman Collection
        run: |
          # Run the converter
          # -s: source OpenAPI file
          # -o: output Postman collection file
          # -p: pretty-print the output JSON
          # -O: specify converter options (folderStrategy=Tags attempts a flatter structure)
          openapi2postmanv2 -s docs/openapi.json -o Terminal49-API.postman_collection.json -p -O folderStrategy=Tags,parametersResolution=Example

      - name: Commit changes
        id: commit # Give step an ID to check output later
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Terminal49-API.postman_collection.json
          # Check if there are changes to commit
          if git diff --quiet --cached; then
            echo "No changes detected in generated collection."
            echo "committed=false" >> $GITHUB_OUTPUT
          else
            echo "Generated collection changed. Committing..."
            # Use [skip ci] to prevent potential loops if other actions trigger on commits
            git commit -m "chore: Auto-generate Postman collection from openapi.json [skip ci]"
            echo "committed=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        # Only push if the commit step actually made a commit
        if: steps.commit.outputs.committed == 'true'
        run: |
          echo "Pushing updated collection to ${{ github.ref_name }}..."
          # Use github.ref_name to push to the correct branch the workflow ran on
          git push origin HEAD:${{ github.ref_name }}

      # No deployment logic here
